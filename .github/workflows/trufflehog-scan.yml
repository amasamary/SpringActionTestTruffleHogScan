name: Build and Secret Scan

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Récupération du code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # nécessaire pour scanner l'historique complet

      # 2. Installation de Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      # 3. Compilation & tests du projet Spring Boot
      - name: Build with Maven
        run: mvn clean install -DskipTests=false

      # 4. Installation de TruffleHog v3 (dernière version stable)
      - name: Install TruffleHog
        run: |
          curl -sSL https://github.com/trufflesecurity/trufflehog/releases/latest/download/trufflehog_linux_amd64 -o trufflehog
          file trufflehog
          head -5 trufflehog
          chmod +x trufflehog
          sudo mv trufflehog /usr/local/bin/

      # 5. Scan du code et de l'historique Git
      - name: Run TruffleHog scan
        run: |
          # Fichiers à exclure pour réduire les faux positifs
          echo "*.md" >> exclude.txt
          
          trufflehog git $GITHUB_WORKSPACE \
            --since-commit HEAD~20 \
            --exclude-paths exclude.txt \
            --json > trufflehog-report.json

          if [ -s trufflehog-report.json ]; then
            echo "⚠️ Secrets found!"
            cat trufflehog-report.json
            exit 1
          else
            echo "✅ No secrets found."
          fi

      # 6. Sauvegarde du rapport en artifact téléchargeable
      - name: Upload scan report
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: trufflehog-report.json
